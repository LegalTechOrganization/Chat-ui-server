"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Kafka –¥–ª—è chat-service
"""
import asyncio
import logging
import os
import threading
from typing import Optional
from django.apps import AppConfig

from .kafka_service import kafka_service
from .event_handlers import event_handler

logger = logging.getLogger(__name__)


class KafkaManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Kafka –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π"""
    
    def __init__(self):
        self.kafka_task: Optional[asyncio.Task] = None
        self.loop: Optional[asyncio.AbstractEventLoop] = None
        self.thread: Optional[threading.Thread] = None
        self.running = False

    async def start_kafka_service(self):
        """–ó–∞–ø—É—Å–∫ Kafka —Å–µ—Ä–≤–∏—Å–∞ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤—Å–µ—Ö consumers"""
        try:
            logger.info("üöÄ Starting Kafka service for chat-service...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Kafka —Å–µ—Ä–≤–∏—Å
            await kafka_service.start()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º consumers –¥–ª—è –≤—Å–µ—Ö —Ç–æ–ø–∏–∫–æ–≤
            consumers_config = [
                # –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
                ("chat-service-send-message", "chat-service", event_handler.handle_send_message),
                ("chat-service-get-conversations", "chat-service", event_handler.handle_get_conversations),
                ("chat-service-create-conversation", "chat-service", event_handler.handle_create_conversation),
                ("chat-service-delete-conversation", "chat-service", event_handler.handle_delete_conversation),
                ("chat-service-get-messages", "chat-service", event_handler.handle_get_messages),
                
                # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏
                ("chat-service-get-prompts", "chat-service", event_handler.handle_get_prompts),
                ("chat-service-create-prompt", "chat-service", event_handler.handle_create_prompt),
                ("chat-service-delete-prompt", "chat-service", event_handler.handle_delete_prompt),
                
                # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
                ("chat-service-upload-document", "chat-service", event_handler.handle_upload_document),
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
                ("chat-service-generate-title", "chat-service", event_handler.handle_generate_title),
            ]
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π consumer
            for topic, group_id, handler in consumers_config:
                try:
                    await kafka_service.start_consumer(topic, group_id, handler)
                    logger.info("‚úÖ Registered consumer for topic: %s", topic)
                except Exception as e:
                    logger.error("‚ùå Failed to register consumer for %s: %s", topic, e)
            
            logger.info("üéØ All Kafka consumers registered successfully")
            
            # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
            while self.running:
                await asyncio.sleep(1)
                
        except Exception as e:
            logger.error("üí• Fatal error in Kafka service: %s", e)
        finally:
            await kafka_service.stop()

    def start_in_thread(self):
        """–ó–∞–ø—É—Å–∫ Kafka –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        def run_kafka():
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π event loop –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ—Ç–æ–∫–∞
            self.loop = asyncio.new_event_loop()
            asyncio.set_event_loop(self.loop)
            
            try:
                self.running = True
                self.kafka_task = self.loop.create_task(self.start_kafka_service())
                self.loop.run_until_complete(self.kafka_task)
            except Exception as e:
                logger.error("‚ùå Error in Kafka thread: %s", e)
            finally:
                self.loop.close()

        self.thread = threading.Thread(target=run_kafka, daemon=True)
        self.thread.start()
        logger.info("üßµ Kafka service started in background thread")

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka —Å–µ—Ä–≤–∏—Å–∞"""
        self.running = False
        
        if self.kafka_task and not self.kafka_task.done():
            if self.loop and self.loop.is_running():
                self.loop.call_soon_threadsafe(self.kafka_task.cancel)
        
        if self.thread and self.thread.is_alive():
            logger.info("üõë Stopping Kafka thread...")
            self.thread.join(timeout=5)
        
        logger.info("üõë Kafka manager stopped")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
kafka_manager = KafkaManager()


class ChatKafkaConfig(AppConfig):
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Kafka –≤ chat app"""
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'chat'

    def ready(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Kafka –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω
        if os.getenv('DISABLE_KAFKA', '').lower() not in ['true', '1', 'yes']:
            import django
            if django.VERSION >= (3, 2):
                # –ó–∞–ø—É—Å–∫–∞–µ–º Kafka —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
                import sys
                if 'runserver' in sys.argv or 'runserver_plus' in sys.argv:
                    logger.info("üîß Django ready - starting Kafka integration")
                    kafka_manager.start_in_thread()
                else:
                    logger.info("üîß Django ready - Kafka disabled for this command")
            else:
                logger.warning("‚ö†Ô∏è Django version < 3.2, Kafka integration may not work properly")
        else:
            logger.info("üîß Kafka integration disabled by DISABLE_KAFKA environment variable")


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Kafka –∏–∑ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def start_kafka():
    """–ü—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Kafka"""
    if not kafka_manager.running:
        kafka_manager.start_in_thread()


def stop_kafka():
    """–ü—É–±–ª–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Kafka"""
    kafka_manager.stop()


def is_kafka_running():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Kafka"""
    return kafka_manager.running
