import os
import logging
from django.apps import AppConfig

logger = logging.getLogger(__name__)


class ChatConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'chat'

    def ready(self):
        import chat.signals
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Kafka –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        try:
            from .kafka_app import kafka_manager
            
            # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∑–∞–ø—É—Å–∫–∞–µ–º Kafka —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω —è–≤–Ω–æ
            disable_kafka = os.getenv('DISABLE_KAFKA', '').lower() in ['true', '1', 'yes']
            
            if not disable_kafka:
                # –ó–∞–ø—É—Å–∫–∞–µ–º Kafka –¥–ª—è –≤—Å–µ—Ö —Å–ª—É—á–∞–µ–≤, –∫—Ä–æ–º–µ —è–≤–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                import sys
                command_line = ' '.join(sys.argv).lower()
                
                # –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º Kafka —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥
                skip_commands = ['migrate', 'makemigrations', 'collectstatic', 'createsuperuser', 'shell']
                should_skip = any(cmd in command_line for cmd in skip_commands)
                
                if not should_skip:
                    logger.info("üöÄ Starting Kafka integration for chat-service")
                    kafka_manager.start_in_thread()
                else:
                    logger.info("üîß Kafka disabled for management command: %s", ' '.join(sys.argv))
            else:
                logger.info("üîß Kafka integration disabled by DISABLE_KAFKA environment variable")
                
        except Exception as e:
            logger.error("‚ùå Failed to initialize Kafka integration: %s", e)
