# Generated by Django 4.1.7 on 2025-08-21 11:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub', models.CharField(db_index=True, help_text='Уникальный идентификатор пользователя из JWT токена', max_length=36)),
                ('org_id', models.CharField(blank=True, db_index=True, help_text='Идентификатор организации', max_length=36, null=True)),
                ('topic', models.CharField(help_text='Тема разговора', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'conversations',
            },
        ),
        migrations.CreateModel(
            name='EmbeddingDocument',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub', models.CharField(db_index=True, help_text='Уникальный идентификатор пользователя из JWT токена', max_length=36)),
                ('org_id', models.CharField(blank=True, db_index=True, help_text='Идентификатор организации', max_length=36, null=True)),
                ('title', models.CharField(help_text='Заголовок документа', max_length=255)),
                ('faiss_store', models.BinaryField(help_text='FAISS векторное хранилище')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'db_table': 'embedding_documents',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub', models.CharField(db_index=True, help_text='Уникальный идентификатор пользователя из JWT токена', max_length=36)),
                ('message', models.TextField(help_text='Текст сообщения')),
                ('is_bot', models.BooleanField(default=False, help_text='Сообщение от бота')),
                ('message_type', models.IntegerField(default=0, help_text='Тип сообщения')),
                ('messages', models.JSONField(default=list, help_text='История сообщений')),
                ('tokens', models.IntegerField(default=0, help_text='Количество токенов')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub', models.CharField(db_index=True, help_text='Уникальный идентификатор пользователя из JWT токена', max_length=36)),
                ('title', models.CharField(help_text='Заголовок промпта', max_length=255)),
                ('content', models.TextField(help_text='Содержание промпта')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'db_table': 'prompts',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Название настройки', max_length=255, unique=True)),
                ('value', models.TextField(help_text='Значение настройки')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='TokenUsage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub', models.CharField(db_index=True, help_text='Уникальный идентификатор пользователя из JWT токена', max_length=36, unique=True)),
                ('tokens', models.BigIntegerField(default=0, help_text='Общее количество использованных токенов')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'token_usage',
            },
        ),
        migrations.AddIndex(
            model_name='tokenusage',
            index=models.Index(fields=['sub'], name='token_usage_sub_8dfdc7_idx'),
        ),
        migrations.AddIndex(
            model_name='prompt',
            index=models.Index(fields=['sub', 'created_at'], name='prompts_sub_15ba0a_idx'),
        ),
        migrations.AddField(
            model_name='message',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.conversation'),
        ),
        migrations.AddField(
            model_name='message',
            name='embedding_message_doc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.embeddingdocument'),
        ),
        migrations.AddIndex(
            model_name='embeddingdocument',
            index=models.Index(fields=['sub', 'created_at'], name='embedding_d_sub_8cbd25_idx'),
        ),
        migrations.AddIndex(
            model_name='embeddingdocument',
            index=models.Index(fields=['sub', 'org_id'], name='embedding_d_sub_86cdac_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['sub', 'created_at'], name='conversatio_sub_90c35f_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['sub', 'org_id'], name='conversatio_sub_f5f64a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sub', 'created_at'], name='messages_sub_005881_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sub', 'conversation'], name='messages_sub_3e457c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messages_convers_3ebb41_idx'),
        ),
    ]
