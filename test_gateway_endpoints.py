#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Chat Service —á–µ—Ä–µ–∑ Gateway
"""

import requests
import json
import os

# –ë–∞–∑–æ–≤—ã–µ URL
GATEWAY_URL = "http://localhost:8002"
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –∑–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç
if os.path.exists('/.dockerenv'):
    # –í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    CHAT_SERVICE_URL = "http://127.0.0.1:8010"
else:
    # –°–Ω–∞—Ä—É–∂–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    CHAT_SERVICE_URL = "http://localhost:8003"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
test_jwt = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0LXN1Yi0xMjMiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJmdWxsX25hbWUiOiJUZXN0IFVzZXIiLCJvcmdfaWQiOiJ0ZXN0LW9yZy0xMjMiLCJyb2xlcyI6WyJ1c2VyIl0sImlhdCI6MTYzNDU2Nzg5MCwiZXhwIjoxOTQ5OTI3ODkwfQ.test-signature"

user_data = {
    "jwt_token": test_jwt,
    "user_data": {
        "sub": "test-sub-123",
        "email": "test@example.com",
        "full_name": "Test User",
        "org_id": "test-org-123",
        "roles": ["user"]
    }
}

headers = {
    "X-User-Data": json.dumps(user_data),
    "Content-Type": "application/json"
}

def test_chat_service_direct():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Chat Service –Ω–∞–ø—Ä—è–º—É—é"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Chat Service –Ω–∞–ø—Ä—è–º—É—é...")
    print("=" * 60)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥
    print("1. GET /api/chat/conversations/")
    response = requests.get(f"{CHAT_SERVICE_URL}/api/chat/conversations/", headers=headers)
    print(f"   Status: {response.status_code}")
    if response.status_code == 200:
        conversations = response.json()
        print(f"   –ë–µ—Å–µ–¥: {len(conversations)}")
        for conv in conversations:
            print(f"   - ID: {conv['id']}, Topic: {conv['topic']}, Sub: {conv['sub']}")
    
    # 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É
    print("\n2. POST /api/chat/conversations/")
    conversation_data = {"topic": "Test Conversation via Gateway"}
    response = requests.post(f"{CHAT_SERVICE_URL}/api/chat/conversations/", 
                           headers=headers, json=conversation_data)
    print(f"   Status: {response.status_code}")
    if response.status_code == 201:
        conversation = response.json()
        conv_id = conversation['id']
        print(f"   –°–æ–∑–¥–∞–Ω–∞ –±–µ—Å–µ–¥–∞ ID: {conv_id}")
        
        # 3. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –±–µ—Å–µ–¥—É
        print(f"\n3. GET /api/chat/conversations/{conv_id}/")
        response = requests.get(f"{CHAT_SERVICE_URL}/api/chat/conversations/{conv_id}/", headers=headers)
        print(f"   Status: {response.status_code}")
        if response.status_code == 200:
            conv = response.json()
            print(f"   –ë–µ—Å–µ–¥–∞: {conv['topic']}")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥–µ
        print(f"\n4. POST /api/chat/messages/")
        message_data = {
            "conversation": conv_id,
            "message": "Test message from Gateway testing"
        }
        response = requests.post(f"{CHAT_SERVICE_URL}/api/chat/messages/", 
                               headers=headers, json=message_data)
        print(f"   Status: {response.status_code}")
        if response.status_code == 201:
            message = response.json()
            print(f"   –°–æ–∑–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {message['id']}")
        
        # 5. –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ—Å–µ–¥—ã
        print(f"\n5. GET /api/chat/messages/?conversationId={conv_id}")
        response = requests.get(f"{CHAT_SERVICE_URL}/api/chat/messages/?conversationId={conv_id}", headers=headers)
        print(f"   Status: {response.status_code}")
        if response.status_code == 200:
            messages = response.json()
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
            for msg in messages:
                print(f"   - ID: {msg['id']}, Message: {msg['message'][:50]}...")
    
    print("\n" + "=" * 60)

def test_gateway_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —á–µ—Ä–µ–∑ Gateway"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —á–µ—Ä–µ–∑ Gateway...")
    print("=" * 60)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–µ—Å–µ–¥ —á–µ—Ä–µ–∑ Gateway
    print("1. GET /api/chat/conversations/ (—á–µ—Ä–µ–∑ Gateway)")
    response = requests.get(f"{GATEWAY_URL}/api/chat/conversations/")
    print(f"   Status: {response.status_code}")
    if response.status_code == 200:
        conversations = response.json()
        print(f"   –ë–µ—Å–µ–¥: {len(conversations)}")
        for conv in conversations:
            print(f"   - ID: {conv['id']}, Topic: {conv['topic']}")
    
    print("\n" + "=" * 60)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    print(f"üìç Gateway URL: {GATEWAY_URL}")
    print(f"üìç Chat Service URL: {CHAT_SERVICE_URL}")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Chat Service –Ω–∞–ø—Ä—è–º—É—é
    test_chat_service_direct()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Gateway
    test_gateway_endpoints()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
